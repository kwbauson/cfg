name: build
on: { workflow_dispatch, push }
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        system: [x86_64-linux, aarch64-darwin]
    runs-on: [nix, "${{ matrix.system }}"]
    steps:
      - uses: actions/checkout@v4
      - run: nix -L build .#checks
      - run: ./result/bin/checks
      - name: Run cachix push
        run: |
          cachix authtoken '${{ secrets.CACHIX_AUTH_TOKEN }}'
          cachix push kwbauson ./result
      - name: Store path job outputs
        if: github.ref == 'refs/heads/actions-cache-lock'
        id: store_paths
        run: |
          echo 'checks_${{ matrix.system }}'=$(realpath ./result) >> "$GITHUB_OUTPUT"
          nix build .#create-cached-refs
          echo 'create_cached_refs_${{ matrix.system }}'=$(realpath ./result) >> "$GITHUB_OUTPUT"
    outputs:
      checks_x86_64-linux: ${{ steps.store_paths.outputs.checks_x86_64-linux }}
      checks_aarch64-darwin: ${{ steps.store_paths.outputs.checks_aarch64-darwin }}
      create_cached_refs_x86_64-linux: ${{ steps.store_paths.outputs.create_cached_refs_x86_64-linux }}
      create_cached_refs_aarch64-darwin: ${{ steps.store_paths.outputs.create_cached_refs_aarch64-darwin }}

  cached-refs:
    if: github.ref == 'refs/heads/actions-cache-lock'
    needs: build
    concurrency: { group: cached-refs }
    strategy:
      matrix:
        system: [x86_64-linux, aarch64-darwin]
    runs-on: [nix, "${{ matrix.system }}"]
    env:
      system: ${{ matrix.system }}
      checks: ${{ needs.build.outputs[format('checks_{0}', matrix.system)] }}
      create_cached_refs: ${{ needs.build.outputs[format('create_cached_refs_{0}', matrix.system)] }}
    steps:
      - name: Run create-cached-refs
        run: |
          cachix pin kwbauson "build-$system" "$checks" --keep-revisions 1
          "$create_cached_refs"/bin/create-cached-refs -- push "$checks"/cached-paths --tag "$tag"
