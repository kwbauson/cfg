diff --git a/Makefile b/Makefile
index 040f8c977..17d73a9fd 100644
--- a/Makefile
+++ b/Makefile
@@ -133,5 +133,4 @@ source-package:
 	mkdir -p source_package/jitsi-meet/css && \
 	cp -r *.js *.html resources/*.txt connection_optimization favicon.ico fonts images libs static sounds LICENSE lang source_package/jitsi-meet && \
 	cp css/all.css source_package/jitsi-meet/css && \
-	(cd source_package ; tar cjf ../jitsi-meet.tar.bz2 jitsi-meet) && \
-	rm -rf source_package
+	(cd source_package ; tar cjf ../jitsi-meet.tar.bz2 jitsi-meet)
diff --git a/css/filmstrip/_tile_view.scss b/css/filmstrip/_tile_view.scss
index 083b4c083..7fee90ba6 100644
--- a/css/filmstrip/_tile_view.scss
+++ b/css/filmstrip/_tile_view.scss
@@ -97,7 +97,7 @@
      * Max-width corresponding to the ASPECT_RATIO_BREAKPOINT from features/filmstrip/constants,
      * from which we subtract the chat size.
      */
-    @media only screen and (max-width: calc(500px + #{$sidebarWidth})) {
+    @media only screen and (max-width: calc(100px + #{$sidebarWidth})) {
         video {
             object-fit: cover;
         }
diff --git a/react/features/filmstrip/constants.ts b/react/features/filmstrip/constants.ts
index cbe134765..0c5f9ce94 100644
--- a/react/features/filmstrip/constants.ts
+++ b/react/features/filmstrip/constants.ts
@@ -32,7 +32,7 @@ export const DISPLAY_DRAWER_THRESHOLD = 512;
  * single column view.
  * If this is to be modified, please also change the related media query from the tile_view scss file.
  */
-export const ASPECT_RATIO_BREAKPOINT = 500;
+export const ASPECT_RATIO_BREAKPOINT = 100;
 
 /**
  * Minimum height of tile for small screens.
diff --git a/react/features/shared-video/components/web/AbstractVideoManager.js b/react/features/shared-video/components/web/AbstractVideoManager.js
index 1ecc23fe1..444f9c91b 100644
--- a/react/features/shared-video/components/web/AbstractVideoManager.js
+++ b/react/features/shared-video/components/web/AbstractVideoManager.js
@@ -326,6 +326,7 @@ class AbstractVideoManager extends PureComponent<Props> {
      * @returns {void}
      */
     smartAudioMute() {
+        return;
         const { _isLocalAudioMuted, _muteLocal } = this.props;
 
         if (!_isLocalAudioMuted
